---Задание
---У вас есть онлайн-магазин, который продает электронику. Компания имеет следующие сущности:
---Пользователи (Users):
---user_id (уникальный идентификатор пользователя)
---имя (first_name)
---фамилия (last_name)
---электронная почта (email)
---адрес доставки (shipping_address)

CREATE TABLE "user"(
    id INT PRIMARY KEY NOT NULL,
	first_name VARCHAR(20),
	last_name VARCHAR(20),
	email VARCHAR(30),
	shipping_address VARCHAR(30)
);


---Продукты (Products):
---product_id (уникальный идентификатор продукта)
---название (name)
---категория (category)
---бренд (brand)
---цена (price)
---количество на складе (quantity)

CREATE TABLE products(
    product_id INT PRIMARY KEY NOT NULL,
	name VARCHAR(20),
	category VARCHAR(20),
	brand VARCHAR(20),
	price INT,
	quantity INT
);


---Заказы (Orders):
---order_id (уникальный идентификатор заказа)
---user_id (идентификатор пользователя, связь с таблицей Users)
---дата (date)
---статус (status)

CREATE TABLE orders(
    order_id INT PRIMARY KEY NOT NULL,
	user_id INT NOT NULL,
	data DATE,
	status VARCHAR(20),
	FOREIGN KEY (user_id) REFERENCES "user"(id)
);


---Позиции заказов (OrderItems):
---order_items_id (уникальный идентификатор позиции заказа)
---order_id (идентификатор заказа, связь с таблицей Orders)
---product_id (идентификатор продукта, связь с таблицей Products)
---количество (quantity)
---стоимость (price)

CREATE TABLE order_items(
    order_items_id INT PRIMARY KEY NOT NULL,
	order_id INT NOT NULL,
	product_id INT NOT NULL,
	quantity INT,
	price INT,
	FOREIGN KEY (order_id) REFERENCES orders(order_id),
	FOREIGN KEY (product_id) REFERENCES products(product_id)
);


---В каждую таблицу добавьте по 10 записей и решите следующие задачи:
--1--
INSERT INTO
"user"(id, first_name, last_name, email, shipping_address)
VALUES
(1, 'Diana', 'Gerakl', 'd.v.gera@gmail.com', 'Belarus, Minsk'),
(2, 'Masha', 'Zezar', 'zezar@gmail.com', 'Ucraina, Dombas'),
(3, 'Pasha', 'Pushkin', 'puchkin@email.ru', 'Izrail, Sector-Gasa'),
(4, 'Tom', 'Holand', 'holand@gmail.com', 'USA, Boston'),
(5, 'Galy', 'Otmena', 'otmena@gmail.com', 'Belarus, Gomel'),
(6, 'Aleksander', 'Macovski', 'Macovski@gmail.com', 'Russa, Moskou'),
(7, 'Jania', 'Bukin', 'bukin@gmail.com', 'Belarus, Vitebsk'),
(8, 'Macha', 'Chipushila', 'chipushila@gmail.com', 'Belarus, Minsk'),
(9, 'Tania', 'Cobchak', 'cobchak@gmail.com', 'Germani, Berlin'),
(10, 'Vasia', 'Smertia', 'smertia@gmail.com', 'Japan, Tokio');

--2--
INSERT INTO products(product_id, name, category, brand, price, quantity)
VALUES (1, 'iPhone 13', 'Electronics', 'Apple', 999, 50),
       (2, 'Samsung Galaxy S21', 'Electronics', 'Samsung', 899, 70),
       (3, 'Nike Air Max', 'Footwear', 'Nike', 150, 100),
       (4, 'Canon EOS R5', 'Electronics', 'Canon', 3499, 20),
       (5, 'Sony PlayStation 5', 'Electronics', 'Sony', 499, 30),
       (6, 'Levi`s 501 Jeans', 'Apparel', 'Levi`s', 80, 200),
       (7, 'Bose QuietComfort', 'Electronics', 'Bose', 299, 40),
       (8, 'Adidas Ultraboost', 'Footwear', 'Adidas', 180, 150),
       (9, 'MacBook Pro', 'Electronics', 'Apple', 1499, 10),
       (10, 'Microsoft Xbox', 'Electronics', 'Microsoft', 499, 25);

--3--
INSERT INTO orders (order_id, user_id, data, status)
VALUES
(1, 5, '2023-12-01', 'Pending'),
(2, 9, '2023-12-02', 'Shipped'),
(3, 3, '2023-12-03', 'Delivered'),
(4, 2, '2023-12-04', 'Pending'),
(5, 8, '2023-12-05', 'Cancelled'),
(6, 4, '2023-12-06', 'Shipped'),
(7, 7, '2023-12-07', 'Delivered'),
(8, 6, '2023-12-08', 'Pending'),
(9, 10, '2023-12-09', 'Shipped'),
(10, 1, '2023-12-10', 'Delivered')
;

--4--
INSERT INTO order_items (order_items_id, order_id, product_id, quantity, price)
VALUES
(1, 5, 2, 3, 2697),
(2, 5, 3, 3, 450),
(3, 3, 7, 2, 598),
(4, 3, 1, 2, 99),
(5, 6, 6, 1, 80),
(6, 6, 4, 1, 3499),
(7, 6, 8, 1, 180),
(8, 9, 1, 4, 3996),
(9, 7, 4, 2, 6998),
(10, 1, 6, 3, 240),
(11, 2, 3, 2, 450),
(12, 3, 10, 1, 499),
(13, 4, 5, 4, 1996),
(14, 8, 9, 4, 5996),
(15, 10, 5, 4, 1996)
;


---1. Найти все заказы, сделанные определённым пользователем (по его электронной почте).
SELECT *
FROM orders
WHERE user_id IN (
	SELECT id
	FROM "user"
	WHERE email = 'bukin@gmail.com'
);


---2. Подсчитать общее количество продуктов в определённой категории.
SELECT category, COUNT(*) AS total_count
FROM products
WHERE category = 'Electronics'
GROUP BY category;


---3. Найти все заказы, сделанные в определённый период времени.
SELECT *
FROM orders
WHERE data > '2023-12-02' and data < '2023-12-06';


---4. Подсчитать сумму всех заказов для каждого пользователя.
SELECT orders.user_id, SUM(order_items.price) AS total_price
FROM orders
JOIN order_items ON orders.order_id = order_items.order_id
GROUP BY orders.user_id;


---5. Найти все продукты, у которых остаток на складе меньше определённого значения.
SELECT *
FROM products
WHERE quantity < 50;


---6. Найти все заказы, стоимость которых превышает определённую сумму.
SELECT order_id, SUM(price) AS total_price
FROM order_items
WHERE order_items.price > 1996
GROUP BY order_id;


---7. Найти все заказы, которые находятся в определённом статусе.
SELECT *
FROM orders
WHERE status = 'Shipped';


---8. Подсчитать среднюю стоимость продуктов в каждой категории.
SELECT category, AVG(price) AS total_price
FROM products
GROUP BY category;


---9. Найти все заказы, которые содержат определённый продукт
SELECT *
FROM order_items
WHERE product_id = 4;


---10. Подсчитать общую стоимость всех заказов, сделанных в определённом году.
SELECT orders.data, SUM(order_items.price) AS total_price
FROM orders
JOIN order_items ON orders.order_id = order_items.order_id
WHERE orders.data = '2023-12-04'
GROUP BY orders.order_id;

